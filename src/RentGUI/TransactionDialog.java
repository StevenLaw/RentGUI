/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package RentGUI;

import RentControl.*;
import RentDB.EquipmentTypeDB;
import RentDB.ItemDB;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Steven Law
 */
public class TransactionDialog extends javax.swing.JDialog {

    private Transaction trans;
    private Customer customer;
    private java.awt.Frame parent;
    private EquipmentTypeDB EqDB;
    private ItemDB IDB;

    /**
     * Creates new form TransactionDialog
     */
    public TransactionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();

        trans = new Transaction(0, PaymentType.Cash, 0, 0);

        EqDB = new EquipmentTypeDB();
        IDB = new ItemDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        transTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        payButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(687, 300));

        transTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipment Type", "Item", "Sale/Rent", "Price", "Start Date", "End Date", "Total Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transTable);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        payButton.setText("Payment");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(payButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(cancelButton)
                    .addComponent(payButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        trans = null;
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        PaymentDialog pd = new PaymentDialog(parent, true);
        boolean canceled = pd.pay(trans);
        if (!canceled) {
            dispose();
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        AddItemDialog addD = new AddItemDialog(parent, true);
        ArrayList tmp = trans.getPurchases();
        //System.out.println(tmp.size());
        addD.addItem(trans);
        tmp = trans.getPurchases();
        //System.out.println(tmp.size());
        updateTable();
    }//GEN-LAST:event_addButtonActionPerformed

    public Transaction newTransaction(Customer customer) {
        this.customer = customer;
        this.setVisible(true);
        return trans;
    }

    /**
     * This method updates the table with the correct items.
     */
    private void updateTable() {
        DefaultTableModel model = (DefaultTableModel) transTable.getModel();

        //clear the table
        model.setRowCount(0);

        ArrayList<Reservation> rentals = trans.getReservations();
        ArrayList<Purchase> sales = trans.getPurchases();
        Object[] rowData;

        //System.out.println("Rental Size: " + rentals.size());
        if (rentals.size() > 0) {
            rowData = new Object[7];
            rowData[0] = "Reservations";
            model.addRow(rowData);

            for (Reservation r : rentals) {
                rowData = new Object[7];
                //System.out.println(IDB.getItem(r.getItemNo()));
                Item item = IDB.getItem(r.getItemNo());
                EquipmentType eq = EqDB.getEquipmentType(item.getEqID());
                rowData[0] = "   " + eq.toString();
                rowData[1] = item;
                rowData[2] = "Rent";
                rowData[4] = r.getStartTime();
                rowData[5] = r.getEndTime();
                model.addRow(rowData);
            }
        }
        if (sales.size() > 0) {
            rowData = new Object[7];
            rowData[0] = "Sales";
            model.addRow(rowData);

            for (Purchase p : sales) {
                rowData = new Object[7];
                //System.out.println(IDB.getItem(p.getItemNo()));
                Item item = IDB.getItem(p.getItemNo());
                EquipmentType eq = EqDB.getEquipmentType(item.getEqID());
                rowData[0] = "   " + eq.toString();
                rowData[1] = item;
                rowData[2] = "Sale";
                model.addRow(rowData);
            }
        }
        rowData = new Object[7];
        rowData[0] = "Total";
        model.addRow(rowData);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                TransactionDialog dialog = new TransactionDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton payButton;
    private javax.swing.JTable transTable;
    // End of variables declaration//GEN-END:variables
}
